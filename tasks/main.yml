---
- name: Derive datadirs from minio_extra_disks (if not provided)
  set_fact:
    minio_server_datadirs: "{{ minio_extra_disks | map(attribute='mount') | list }}"

- name: "Preconf | Prepare data disks"
  include_tasks: prepare_disks.yml
  when:
    - minio_server_datadirs is defined
    - (minio_server_datadirs | length) > 0

# Install Minio Server
- name: Install server
  include_tasks: install_server.yml
  when: minio_install_server

# Install Minio Client
- name: Install client
  include_tasks: install_client.yml
  when: minio_install_client

# Configure server/cluster
- name: Configure server
  include_tasks: configure_server.yml
  when: minio_url|length > 0 and minio_install_client
  # run once per cluster
  run_once: true

# Гарантированно без _minio_scheme и прочих неожиданных переменных
- name: "Compose MinIO URLs"
  ansible.builtin.set_fact:
    # берём minio_url, который уже выставляется в install_server.yml,
    # иначе собираем из известных полей
    minio_connection_url: >-
      {{ minio_url
         | default('http://' ~ (minio_server_address | default(ansible_host | default(inventory_hostname)))
         ~ ':' ~ (minio_server_port | default(9000))) }}
    # console_url = тот же хост/схема, другой порт
    minio_console_url: >-
      {{ (minio_connection_url | regex_replace(':[0-9]+$', ':' ~ (minio_console_port | default(9001)))) }}

- name: "Publish outputs to CloudLink"
  run_once: true
  ansible.builtin.set_stats:
    data:
      connection_url: "{{ minio_connection_url }}"
      console_url: "{{ minio_console_url }}"
      root_user: "{{ minio_root_user }}"
