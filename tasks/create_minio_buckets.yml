---
- name: Validate required variables
  ansible.builtin.assert:
    that:
      - connection_url is defined and (connection_url | length) > 0
      - access_key is defined and (access_key | length) > 0
      - access_secret is defined and (access_secret | length) > 0
      - bucket_name is defined and (bucket_name | length) > 0
    fail_msg: "connection_url, access_key, access_secret, bucket_name must be provided"

- name: Pick mc/mcli candidates
  ansible.builtin.set_fact:
    _mc_candidates:
      - /usr/local/bin/mc
      - /usr/bin/mc
      - /usr/local/bin/mcli
      - /usr/bin/mcli

- name: Detect client binary
  ansible.builtin.stat:
    path: "{{ item }}"
  loop: "{{ _mc_candidates }}"
  register: _mc_stats

- name: Select client binary
  ansible.builtin.set_fact:
    _mc_bin: "{{ (_mc_stats.results | selectattr('stat.exists','eq', true) | map(attribute='stat.path') | list | first) | default('') }}"

- name: Fail if client missing
  ansible.builtin.fail:
    msg: "MinIO client (mc/mcli) not found in {{ _mc_candidates | join(', ') }}"
  when: _mc_bin == ''

- name: Configure MinIO alias
  ansible.builtin.command: >
    {{ _mc_bin }} alias set {{ minio_alias | default('myminio') }}
    {{ connection_url }} {{ access_key }} {{ access_secret }}
  register: _alias

  no_log: true
  changed_when: "'Added' in _alias.stdout or 'Updated' in _alias.stdout"

- name: Create bucket (idempotent)
  ansible.builtin.command: >
    {{ _mc_bin }} mb --ignore-existing {{ minio_alias | default('myminio') }}/{{ bucket_name }}
  register: _mb
  changed_when: "'created' in (_mb.stdout | lower)"

- name: Export result
  ansible.builtin.set_stats:
    data:
      bucket_name: "{{ bucket_name }}"
      bucket_url:  "{{ connection_url }}/{{ bucket_name }}"
